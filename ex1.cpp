#include <iostream>
#include <cmath>
#define dd double
using namespace std;

double PF(double a) {
	return pow(a, 2);
}

//int main() {
////	dd sum = 0;
//////	dd data[20] = {83.688, 88.215, 92.845, 97.690, 102.337, 107.148, 111.884, 116.638, 121.369, 126.270, 130.850, 140.404, 145.211, 150.000, 154.705,
//////	               159.395, 164.332, 168.831, 173.625
//////	              };
//////	dd data[10] = {47.162, 47.428, 47.559, 47.521, 47.663, 47.557, 47.511, 47.694, 47.462, 47.355
////
//////	dd data[20] = {207.321, 198.788, 188.175, 178.855, 169.414, 159.775, 150.212, 140.741, 131.348, 121.730, 112.298, 102.766,
//////	               93.185, 83.805, 74.345, 65.860, 55.343, 45.832, 36.268, 26.716
//////	              };
////	dd data[10] = {95.023, 96.022, 94.990, 95.050, 95.069, 93.915, 94.869, 94.909, 95.080, 95.014
////	              };
////	for (int i = 0 ; i < 10; i++) {
////		sum += data[i];
////	}
////	cout << sum / 10;
////	return 0;
//	dd A = 0.85, v = 16.5, F = 0.09, r = 111.3;
//	dd res = (A * PF(v)) / (2 * PF(F) * r);
//	cout << res << endl;
//	return 0;
//}

// ÇóÉùËÙ
int main() {
	dd nt, A0, An;
	while (1) {
		cin >> nt >> A0 >> An;
		dd c = log(A0 / An);
		dd res = 1 / nt * c;
		dd T = nt / 10;
		dd w0 = PF(2 * 3.142 / T) + PF(res);
		cout << res << "  " << sqrt(w0);
	}


	return 0;
}